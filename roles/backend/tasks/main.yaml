- name: disbale default nodejs
  ansible.builtin.command: dnf module disable nodejs -y

- name: enable nodejs 20
  ansible.builtin.command: dnf module enable nodejs:20 -y

- name: install nodejs and mysql client
  ansible.builtin.package:
    name: "{{item}}"
    state: present
  loop:
  - nodejs
  - mysql

- name: create user if does not exist
  ansible.builtin.user:
    name: expense
    state: present

- name: import taks from common role
  tags:
  - deployment
  ansible.builtin.import_role:
    name: common
    tasks_from: app-pre-req

- name: install npm after changing the directory to /app
  tags:
  - deployment
  ansible.builtin.command: npm install
  args:
    chdir: /app

- name: Copy backend service to run it as systemctl service
  ansible.builtin.template:     # ansible.builtin.copy module cannot use variables
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service

- name: ansible to install python dependencies
  ansible.builtin.pip:
    name:
    - PyMySql
    - cryptography
    state: present

- name: import mysql data or load mysql schema
  community.mysql.mysql_db:
    login_user: root
    login_password: "{{mysql_root_password}}"
    login_host: "{{login_host}}"
    state: import
    name: all
    target: /app/schema/backend.sql

- name: Daemon reload and start backend service
  tags:
  - deployment
  ansible.builtin.systemd_service:
    daemon_reload: true
    name: backend
    state: restarted
    enabled: true

# - name: start and enable nodejs
#   ansible.builtin.service:
#     name: nodejs
#     state: started
#     enabled: yes